#!/bin/bash

function abort {
  echo "${@}" 1>&2
  exit 1
}

function download {

  [ -f "${0}.key" ] ||
    abort "Missing license file ${0}.key"

  local key="$(cat ${0}.key)"
  local url="https://download.maxmind.com/geoip/databases/GeoLite2-Country-CSV/download?suffix=zip"
  local out="GeoLite2-Country-CSV.zip"

  if [ -f "${out}" ]
  then
    local now=$(date +%s)
    local age=$(stat -c %Y ${out})
    age=$((${now} - ${age}))

    if [ ${age} -lt 86400 ]
    then
      echo "✅ Up to date ${out}"
      return
    fi
  fi

  rm -rf "${out}"

  curl -fs -JLA geo-ip-block -u "${key}" -o "${out}" "${url}" ||
    abort "Failed downloading ${out}"
  echo "✅ Downloaded ${out}"

  rm -rf db
  unzip -qjd db "${out}"
  echo "✅ Extracted ${out}"
}

function build-ip-block-list {
  local codes=$(echo "$@" | sed "s/ /|/g")
  sed \
    -nE "s/([0-9]+),.*,(${codes}),.*/\1/Ip" \
    "db/GeoLite2-Country-Locations-en.csv" \
    > "db/geoname_id"

  local geoids="$(cat db/geoname_id)"
  geoids=$(echo ${geoids} | sed "s/ /|/g")
  echo ${geoids}

  sed \
    -nE "s/^([0-9:\.\/]+),(${geoids}),.*/\1/Ip" \
    "db/GeoLite2-Country-Blocks-IPv4.csv" \
    > "db/zone-ip4"

  sed \
    -nE "s/^([0-9:\.\/]+),(${geoids}),.*/\1/Ip" \
    "db/GeoLite2-Country-Blocks-IPv6.csv" \
    > "db/zone-ip6"
}

function delete-ipsets {

  if ! firewall-cmd --permanent --info-ipset="geo-ip-block-list-${1}" &> /dev/null
  then
    return
  fi

  firewall-cmd \
    --permanent \
    --zone=drop \
    --remove-source=ipset:"geo-ip-block-list-${1}" > /dev/null

  firewall-cmd \
    --reload > /dev/null

  firewall-cmd \
    --permanent \
    --delete-ipset="geo-ip-block-list-${1}" > /dev/null

  echo "✅ Deleted geo-ip-block-list-${1}"
}

function load-entries {
  firewall-cmd \
    --permanent \
    --ipset="geo-ip-block-list-${1}" \
    --add-entries-from-file="db/zone-${1}" > /dev/null ||
    abort "Failed loading ${f}"

  echo "✅ Loaded ${f}"

  firewall-cmd \
    --permanent \
    --zone=drop \
    --add-source="ipset:geo-ip-block-list-${1}" > /dev/null ||
    abort "Failed adding source for ${1}"

  echo "✅ Added source geo-ip-block-list-${1}"
}

function banner {
  echo -e '\033[0;94m'
  cat << EOF
   █████████                  ████████████████
  ███░░░░░███                ░░███░░███░░░░░███
 ███     ░░░   ██████  ██████ ░███ ░███    ░███
░███          ███░░██████░░███░███ ░██████████
░███    █████░███████░███ ░███░███ ░███░░░░░░
░░███  ░░███ ░███░░░ ░███ ░███░███ ░███
 ░░█████████ ░░██████░░██████ ██████████
  ░░░░░░░░░   ░░░░░░  ░░░░░░ ░░░░░░░░░░
EOF
  echo -e '\033[0m'
}

{

ZONES="${@}"

[ ! -z "${ZONES}" ] ||
  abort "Usage: geo-ip-block <country code> [country code] ..."

[ "${EUID}" -eq 0 ] ||
  abort "Must run as root, please retry with sudo geo-ip-block"

# Save all output to log file
log="${0}-$(date -I).log"
exec > >(tee "${log}") 2>&1

banner
echo -e "Execution time: $(date -Isec)"

pushd $(dirname ${0}) &> /dev/null

download
build-ip-block-list ${ZONES}

delete-ipsets ip4
delete-ipsets ip6

firewall-cmd \
  --permanent \
  --new-ipset="geo-ip-block-list-ip4" \
  --type=hash:net \
  --option=family=inet \
  --option=hashsize=4096 \
  --option=maxelem=200000 \
  --zone=drop > /dev/null ||
  abort "Failed creating ip4 block list"
echo "✅ Created geo-ip-block-list-ip4"

firewall-cmd \
  --permanent \
  --new-ipset="geo-ip-block-list-ip6" \
  --type=hash:net \
  --option=family=inet6 \
  --option=hashsize=4096 \
  --option=maxelem=200000 \
  --zone=drop > /dev/null ||
  abort "Failed creating ip6 block list"
echo "✅ Created geo-ip-block-list-ip6"

load-entries ip4
#load-entries ip6

firewall-cmd --reload > /dev/null ||
  abort "Failed reloading firewall"

echo "✅ Firewall updated successfully"

}
